/* tslint:disable */
/* eslint-disable */
/**
 * Event API
 * API to manage event data for the Event Crowdsource application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventDetails } from './EventDetails';
import {
    EventDetailsFromJSON,
    EventDetailsFromJSONTyped,
    EventDetailsToJSON,
} from './EventDetails';
import type { EventImage } from './EventImage';
import {
    EventImageFromJSON,
    EventImageFromJSONTyped,
    EventImageToJSON,
} from './EventImage';

/**
 * 
 * @export
 * @interface EventItem
 */
export interface EventItem {
    /**
     * 
     * @type {string}
     * @memberof EventItem
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof EventItem
     */
    summary?: string;
    /**
     * 
     * @type {EventDetails}
     * @memberof EventItem
     */
    details?: EventDetails;
    /**
     * 
     * @type {Array<EventImage>}
     * @memberof EventItem
     */
    images?: Array<EventImage>;
}

/**
 * Check if a given object implements the EventItem interface.
 */
export function instanceOfEventItem(value: object): boolean {
    return true;
}

export function EventItemFromJSON(json: any): EventItem {
    return EventItemFromJSONTyped(json, false);
}

export function EventItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'details': json['details'] == null ? undefined : EventDetailsFromJSON(json['details']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(EventImageFromJSON)),
    };
}

export function EventItemToJSON(value?: EventItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'summary': value['summary'],
        'details': EventDetailsToJSON(value['details']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(EventImageToJSON)),
    };
}

