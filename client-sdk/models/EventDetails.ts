/* tslint:disable */
/* eslint-disable */
/**
 * Event API
 * API to manage event data for the Event Crowdsource application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventCategory } from './EventCategory';
import {
    EventCategoryFromJSON,
    EventCategoryFromJSONTyped,
    EventCategoryToJSON,
} from './EventCategory';
import type { Host } from './Host';
import {
    HostFromJSON,
    HostFromJSONTyped,
    HostToJSON,
} from './Host';

/**
 * 
 * @export
 * @interface EventDetails
 */
export interface EventDetails {
    /**
     * 
     * @type {string}
     * @memberof EventDetails
     */
    eventName?: string;
    /**
     * 
     * @type {Date}
     * @memberof EventDetails
     */
    eventDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EventDetails
     */
    deadline?: Date;
    /**
     * 
     * @type {number}
     * @memberof EventDetails
     */
    goal?: number;
    /**
     * 
     * @type {number}
     * @memberof EventDetails
     */
    amountRaised?: number;
    /**
     * 
     * @type {Host}
     * @memberof EventDetails
     */
    host?: Host;
    /**
     * 
     * @type {string}
     * @memberof EventDetails
     */
    location?: string;
    /**
     * 
     * @type {EventCategory}
     * @memberof EventDetails
     */
    category?: EventCategory;
}

/**
 * Check if a given object implements the EventDetails interface.
 */
export function instanceOfEventDetails(value: object): boolean {
    return true;
}

export function EventDetailsFromJSON(json: any): EventDetails {
    return EventDetailsFromJSONTyped(json, false);
}

export function EventDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'eventName': json['eventName'] == null ? undefined : json['eventName'],
        'eventDate': json['eventDate'] == null ? undefined : (new Date(json['eventDate'])),
        'deadline': json['deadline'] == null ? undefined : (new Date(json['deadline'])),
        'goal': json['goal'] == null ? undefined : json['goal'],
        'amountRaised': json['amountRaised'] == null ? undefined : json['amountRaised'],
        'host': json['host'] == null ? undefined : HostFromJSON(json['host']),
        'location': json['location'] == null ? undefined : json['location'],
        'category': json['category'] == null ? undefined : EventCategoryFromJSON(json['category']),
    };
}

export function EventDetailsToJSON(value?: EventDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'eventName': value['eventName'],
        'eventDate': value['eventDate'] == null ? undefined : ((value['eventDate']).toISOString()),
        'deadline': value['deadline'] == null ? undefined : ((value['deadline']).toISOString()),
        'goal': value['goal'],
        'amountRaised': value['amountRaised'],
        'host': HostToJSON(value['host']),
        'location': value['location'],
        'category': EventCategoryToJSON(value['category']),
    };
}

